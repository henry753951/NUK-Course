BNF: 
<assign> -> <id>=<expr>
<id> -> A|B|C|D
<expr> -> <expr> - <term> | <id>
<term> -> <term> * <factor> | <term>/<factor> | <factor>
<factor> -> (<expr>) | <id>

-----<id>=<expr>-----
<id>
=
<expr>

-----A-----
A

-----B-----
B

-----C-----
C

-----D-----
D

-----<expr>-<term>-----
<expr>
-
<term>

-----<id>-----
<id>

-----<term>*<factor>-----
<term>
*
<factor>

-----<term>/<factor>-----
<term>
/
<factor>

-----<factor>-----
<factor>

-----(<expr>)-----
(
<expr>
)

-----<id>-----
<id>

input:
        A=B-C/A-A
Trying:
        <id> = <expr>
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        B-C/A-A
Trying:
        <expr> - <term>  | <id>
input:
        B-C/A
Trying:
        <expr> - <term>  | <id>
input:
        B
Trying:
        <expr> - <term>  | <id>
input:
        B
Trying:
        A  | B  | C  | D
ncnc!
input:
        C/A
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        C
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        C
Trying:
        ( <expr> )  | <id>
input:
        C
Trying:
        A  | B  | C  | D
ncnc!
input:
        A
Trying:
        ( <expr> )  | <id>
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        A
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        A
Trying:
        ( <expr> )  | <id>
input:
        A
Trying:
        A  | B  | C  | D
A=B-C/A-A is VAILD

input:
        A=B*C/D-A
Trying:
        <id> = <expr>
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        B*C/D-A
Trying:
        <expr> - <term>  | <id>
input:
        B*C/D
Trying:
        <expr> - <term>  | <id>
input:
        B*C/D
Trying:
        A  | B  | C  | D
nice try ~ Undoing! 
nice try ~ Undoing!
input:
        B*C/D-A
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
nice try ~ Undoing!
A=B*C/D-A is INVAILD

input:
        A=B/(C-A)
Trying:
        <id> = <expr>
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        B/(C-A)
Trying:
        <expr> - <term>  | <id>
input:
        B/(C
Trying:
        <expr> - <term>  | <id>
input:
        B/(C
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
input:
        B/(C-A)
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
nice try ~ Undoing!
A=B/(C-A) is INVAILD

input:
        A=B-(C*A)
Trying:
        <id> = <expr>
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        B-(C*A)
Trying:
        <expr> - <term>  | <id>
input:
        B
Trying:
        <expr> - <term>  | <id> 
input:
        B
Trying:
        A  | B  | C  | D
ncnc!
input:
        (C*A)
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        (C
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        (C
Trying:
        ( <expr> )  | <id>
input:
        (C
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
input:
        (C*A)
Trying:
        ( <expr> )  | <id>
input:
        C*A
Trying:
        <expr> - <term>  | <id>
input:
        C*A
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
input:
        (C*A)
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
nice try ~ Undoing!
nice try ~ Undoing!
A=B-(C*A) is INVAILD

input:
        A=B*(D-A)
Trying:
        <id> = <expr>
input:
        A
Trying:
        A  | B  | C  | D
ncnc! 
input:
        B*(D-A)
Trying:
        <expr> - <term>  | <id>
input:
        B*(D
Trying:
        <expr> - <term>  | <id>
input:
        B*(D
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
input:
        B*(D-A)
Trying:
        A  | B  | C  | D
nice try ~ Undoing!
nice try ~ Undoing!
nice try ~ Undoing!
A=B*(D-A) is INVAILD

input:
        A=A-B-C
Trying:
        <id> = <expr>
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        A-B-C
Trying:
        <expr> - <term>  | <id>
input:
        A-B
Trying:
        <expr> - <term>  | <id>
input:
        A
Trying:
        <expr> - <term>  | <id> 
input:
        A
Trying:
        A  | B  | C  | D
ncnc!
input:
        B
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        B
Trying:
        ( <expr> )  | <id>
input:
        B
Trying:
        A  | B  | C  | D
ncnc!
input:
        C
Trying:
        <term> * <factor>  | <term> / <factor>  | <factor>
input:
        C
Trying:
        ( <expr> )  | <id>
input:
        C
Trying:
        A  | B  | C  | D
A=A-B-C is VAILD